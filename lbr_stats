#!/usr/bin/env python
# stats re path to precise events
# Author: Ahmad Yasin
# edited: Sep. 2021
#
from __future__ import print_function
__author__ = 'ayasin'

from lbr import *
import common as C

c = {x: 0 for x in ('loop_head', 'loop_seq', 'loop_jmp2mid', 'loop_jmp2head', 'sequential', 'total')}

# usage: perf script -F +brstackinsn [--xed] | ./lbr_stats [ip-of-sample=ALL]
ip = C.arg(1, 'ALL')
filter = None
if ip != 'ALL':
  filter = '%x'%int(ip, 16) #asserts in hexa
  c['ip'] = '0x'+filter

while True:
  sample = read_sample(ip_filter=filter, min_lines=2)
  if not sample: break
  assert len(sample) > 2, 'invalid sample: ' + str(sample)
  c['total'] += 1
  if not is_taken(sample[-2]): c['sequential'] += 1
  if is_loop(sample[-1]):
    c['loop_head'] += 1
    if not is_taken(sample[-2]): c['loop_seq'] += 1
    elif is_taken(sample[-2]) and is_jmp_next(get_taken(sample, -1)): c['loop_jmp2head'] += 1
    br = get_taken(sample, -2)
    ip = line_ip(sample[-1])
    if br['to'] > ip and br['to'] <= get_loop(ip)['back']:
      c['loop_jmp2mid'] += 1
      continue
      print_sample(sample, 22)
      print_loop(ip)
      print_br(br)
      print(c)
      print(stat)
      exit(0)

print(c, C.ratio('sequential', c), C.ratio('loop_seq', c, 'loop_head'),
  C.ratio('loop_jmp2mid', c, 'loop_head'), C.ratio('loop_jmp2head', c, 'loop_head'), sep=', ')

